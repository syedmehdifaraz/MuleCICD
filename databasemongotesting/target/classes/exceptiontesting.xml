<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="HTTP_Listener_2" host="0.0.0.0" port="8882" doc:name="HTTP Listener Configuration"/>
    <mongo:config name="Mongo_DB_1" database="CateringServices" doc:name="Mongo DB" username="suresh" host="hscsrv164"/>
    <flow name="TestuserRegistration">
        <http:listener config-ref="HTTP_Listener_2" path="/adduser" allowedMethods="POST" doc:name="addUserRequest"/>
        <set-variable variableName="userId" value="#[new java.util.Random().nextInt(10000)]" doc:name="generate userId" metadata:id="6f6cbd6d-0020-47e9-897f-60a4452b850f"/>
        <set-variable variableName="currentDate" value="#[new java.util.Date()]" doc:name="set datevalues"/>
        <dw:transform-message doc:name="prepare userjson" metadata:id="b0f2c502-e52b-4b85-9c31-4b15e4ca8bd8">
            <dw:input-payload mimeType="application/json"/>
            <dw:input-variable mimeType="application/java" variableName="userId"/>
            <dw:input-variable mimeType="application/java" variableName="currentDate"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	userName: payload.userName,
	password: payload.password,
	firstName: payload.firstName,
	lastName: payload.lastName,
	email: payload.email,
	phone: payload.phone,
	status: "active",
	role: "user",
	userId: flowVars.userId as :number,
	createDate: flowVars.currentDate as :string,
	lastModifiedDate: flowVars.currentDate as :string
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="convert json to string"/>
        <mongo:insert-object config-ref="Mongo_DB" collection="users" doc:name="insert into Mongo" database="CateringServices"  username="suresh"/>
        <dw:transform-message doc:name="set response" metadata:id="973bb967-c45a-432f-8d55-2ab04e78ac71">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "success",
	statusMessage: "user registered successfully"
}]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload]" doc:name="Set Payload"/>
        <exception-strategy ref="ChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>

    </flow>
    <choice-exception-strategy name="ChoiceExceptionStrategy">
        <catch-exception-strategy when="#[exception.causeMatches('com.mongodb.MongoException.DuplicateKey')]" doc:name="CatchExceptionStrategy">
            <set-property propertyName="http.status" value="409" doc:name="set http status code"/>
            <set-variable variableName="errorVariable" value="#[exception.getCause().toString().split('DuplicateKey:')[1]]" doc:name="retrieve error from exception"/>
            <dw:transform-message metadata:id="3d4b19bd-8b4c-4c1c-a9e8-c5aea7060556" doc:name="prepare error response">
                <dw:input-variable mimeType="application/json" variableName="errorVariable"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "failure",
	statusMessage: flowVars.errorVariable.err
}]]></dw:set-payload>
            </dw:transform-message>
            <set-payload value="#[payload]" mimeType="application/json" doc:name="send Error Response"/>
        </catch-exception-strategy>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="500" doc:name="set http status code"/>
            <dw:transform-message metadata:id="3d4b19bd-8b4c-4c1c-a9e8-c5aea7060556" doc:name="prepare error response">
                <dw:input-variable mimeType="application/json" variableName="errorVariable"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "failure",
	statusMessage: "Exception occurred while processing request"
}]]></dw:set-payload>
            </dw:transform-message>
            <set-payload value="#[payload]" mimeType="application/json" doc:name="send Error Response"/>
        </catch-exception-strategy>
    </choice-exception-strategy>

</mule>
